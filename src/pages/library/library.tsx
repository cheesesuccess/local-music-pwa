// src/pages/Library.tsx import React, { useEffect, useState } from 'react' import { STATIC_SONGS } from '@/data/static-songs' interface Track { title: string artist: string src: string } const Library: React.FC = () => { const [tracks, setTracks] = useState<Track[]>([]) const [currentTrack, setCurrentTrack] = useState<Track | null>(null) const [audio, setAudio] = useState<HTMLAudioElement | null>(null) useEffect(() => { // Load static songs from repo setTracks(STATIC_SONGS) }, []) useEffect(() => { if (currentTrack) { if (audio) { audio.pause() } const newAudio = new Audio(currentTrack.src) newAudio.play() setAudio(newAudio) } }, [currentTrack]) return ( <div className="library-container" style={{ padding: '2rem' }}> <h1 className="text-2xl font-bold mb-4">My Music Library</h1> {tracks.length === 0 && <p>No songs found.</p>} <ul className="space-y-4"> {tracks.map((track, index) => ( <li key={index} className="p-4 rounded-lg shadow cursor-pointer hover:bg-gray-100" onClick={() => setCurrentTrack(track)} > <div className="text-lg font-semibold">{track.title}</div> <div className="text-sm text-gray-600">{track.artist}</div> </li> ))} </ul> {currentTrack && ( <div className="mt-6 p-4 rounded bg-gray-200"> <h2 className="font-bold mb-2">Now Playing</h2> <p>{currentTrack.title} â€” {currentTrack.artist}</p> </div> )} </div> ) } export default Library
